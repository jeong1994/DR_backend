<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dr.mapper.recipe.RecipeMapper">
    <!--    나만의레시피 최신순-->
    <select id="selectAllPages" resultType="MyRecipeListDTO">
        SELECT R.RECIPE_NUMBER AS recipeNumber,
        R.RECIPE_TITLE AS recipeTitle,
        U.USER_NICKNAME AS userNickName,
        TO_CHAR(R.RECIPE_WRITE_DATE, 'YYYY-MM-DD') AS recipeWriteDate,
        P.PHOTO_LOCAL AS photoLocal,
        P.PHOTO_ORIGINAL AS photoOriginal,
        COUNT(G.GOOD_NUMBER) AS goodCount -- 추천수 조회
        FROM DR_RECIPE R
        JOIN DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
        LEFT JOIN DR_PHOTO P ON R.RECIPE_NUMBER = P.RECIPE_NUMBER
        LEFT JOIN DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
        WHERE R.RECIPE_TYPE = '나만의레시피' -- 나만의 레시피 필터링
        GROUP BY R.RECIPE_NUMBER, R.RECIPE_TITLE, U.USER_NICKNAME, R.RECIPE_WRITE_DATE, P.PHOTO_LOCAL,P.PHOTO_ORIGINAL
        ORDER BY R.RECIPE_WRITE_DATE DESC -- 최신순 정렬
    </select>

    <!--    나만의 레시피 추천순-->
    <select id="selectRecipesGood" resultType="MyRecipeListDTO">
        SELECT R.RECIPE_NUMBER                            AS recipeNumber,
               R.RECIPE_TITLE                             AS recipeTitle,
               U.USER_NICKNAME                            AS userNickName,
               TO_CHAR(R.RECIPE_WRITE_DATE, 'YYYY-MM-DD') AS recipeWriteDate,
               P.PHOTO_LOCAL                              AS photoLocal,
               P.PHOTO_ORIGINAL AS photoOriginal,
               COUNT(G.GOOD_NUMBER)                       AS goodCount
        FROM DR_RECIPE R
                 JOIN DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN DR_PHOTO P ON R.RECIPE_NUMBER = P.RECIPE_NUMBER
                 LEFT JOIN DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
        WHERE R.RECIPE_TYPE = '나만의레시피'
        GROUP BY R.RECIPE_NUMBER, R.RECIPE_TITLE, U.USER_NICKNAME, R.RECIPE_WRITE_DATE, P.PHOTO_LOCAL,P.PHOTO_ORIGINAL
        ORDER BY goodCount DESC -- goodCount를 기준으로 정렬
    </select>

    <!--    나만의 레시피 상세페이지-->
    <select id="selectMyRecipeDetail" resultType="MyRecipeDetailDTO">
        SELECT
            R.RECIPE_NUMBER,                                           -- 레시피 번호
            R.RECIPE_TITLE,                                            -- 레시피 제목
            R.RECIPE_TYPE,                                             -- 레시피 종류
            R.RECIPE_TEXT,                                             -- 레시피 내용
            TO_CHAR(R.RECIPE_WRITE_DATE, 'YYYY-MM-DD') AS recipeWriteDate, -- 작성일
            U.USER_NICKNAME,                                           -- 작성자
            P.PHOTO_LOCAL,                                             -- 작성자 프로필 사진 경로
            COUNT(G.GOOD_NUMBER) AS goodCount,                         -- 좋아요 수
            R.USER_NUMBER,                                              -- 작성자 번호
            U.PROFILE_PIC
        FROM
            DR_RECIPE R
                JOIN
            DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
                LEFT JOIN
            DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
                LEFT JOIN (
                SELECT
                    USER_NUMBER,
                    PHOTO_LOCAL,
                    ROW_NUMBER() OVER (PARTITION BY USER_NUMBER ORDER BY PHOTO_UPLOAD DESC) AS RN
                FROM
                    DR_PHOTO
            ) P ON U.USER_NUMBER = P.USER_NUMBER AND P.RN = 1  -- 각 사용자별 최신 사진 한 개만 선택
        WHERE
            R.RECIPE_NUMBER = #{recipeNumber}
          AND R.RECIPE_TYPE = '나만의레시피'
        GROUP BY
            R.RECIPE_NUMBER,
            R.RECIPE_TITLE,
            R.RECIPE_TEXT,
            R.RECIPE_TYPE,
            R.RECIPE_WRITE_DATE,
            U.USER_NICKNAME,
            P.PHOTO_LOCAL,
            R.USER_NUMBER,
            U.PROFILE_PIC
    </select>


    <!-- 나만의 레시피추천 수 증가 -->
    <insert id="increaseGoodCount" parameterType="MyRecipeGoodDTO">
        <selectKey keyProperty="goodNumber" resultType="Long" order="BEFORE">
            SELECT SEQ_GOOD_NUMBER.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO DR_GOOD(GOOD_NUMBER, RECIPE_NUMBER, USER_NUMBER)
        VALUES (#{goodNumber} , #{recipeNumber}, #{userNumber})
    </insert>

    <!--나만의 레시피 추천 수 감소 -->
    <delete id="decreaseGoodCount" parameterType="MyRecipeGoodDTO">
        DELETE
        FROM DR_GOOD
        WHERE RECIPE_NUMBER = #{recipeNumber}
          AND USER_NUMBER = #{userNumber}
    </delete>

    <!--    나만의 레시피 상세페이지 댓글조회-->
    <select id="selectMyRecipeComment" parameterType="Long" resultType="MyRecipeCommentDTO">
        SELECT RP.REPLY_NUMBER      AS replyNumber,
               U.USER_NICKNAME      AS userNickName,
               RP.REPLY_WRITE_DATE  AS replyWriteDate,
               RP.REPLY_MODIFY_DATE AS replyModifyDate,
               RP.REPLY_TEXT        AS replyText,
--                P.PHOTO_ORIGINAL    AS photoOriginal,
               P.PHOTO_LOCAL        AS photoLocal,
               U.PROFILE_PIC
        FROM DR_REPLY RP
                 JOIN
             DR_USER U ON RP.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN
             DR_PHOTO P ON U.USER_NUMBER = P.USER_NUMBER
                 JOIN
             DR_RECIPE R ON RP.RECIPE_NUMBER = R.RECIPE_NUMBER
        WHERE RP.RECIPE_NUMBER = #{recipeNumber}
        ORDER BY RP.REPLY_WRITE_DATE DESC
    </select>

    <!--    나만의 레시피 댓글작성-->
    <insert id="insertReply" parameterType="MyRecipeCommentDTO">
        <selectKey keyProperty="replyNumber" resultType="Long" order="BEFORE">
            SELECT SEQ_REPLY_NUMBER.nextval FROM DUAL
        </selectKey>
        INSERT INTO DR_REPLY(REPLY_NUMBER, REPLY_TEXT, RECIPE_NUMBER, USER_NUMBER)
        VALUES (#{replyNumber}, #{replyText}, #{recipeNumber}, #{userNumber})
    </insert>

    <!--    나만의 레시피 댓글 수정-->
    <update id="updateMyReply" parameterType="MyRecipeCommentDTO">
        UPDATE DR_REPLY
        SET REPLY_TEXT        = #{replyText},
            REPLY_MODIFY_DATE = SYSDATE
        WHERE REPLY_NUMBER = #{replyNumber}
    </update>

    <!--    나만의 레시피 댓글 삭제-->
    <delete id="deleteMyReply" parameterType="Long">
        DELETE
        FROM DR_REPLY
        WHERE REPLY_NUMBER = #{replyNumber}
    </delete>


    <!--    챗봇레시피 최신순-->
    <select id="selectAllPages1" resultType="ChatBotRecipeListDTO">
        SELECT R.RECIPE_NUMBER AS recipeNumber,  <!-- 레시피 번호 추가 -->
        R.RECIPE_TITLE AS recipeTitle,
        U.USER_NICKNAME AS userNickName,
        TO_CHAR(R.RECIPE_WRITE_DATE, 'YYYY-MM-DD') AS recipeWriteDate,
        P.PHOTO_LOCAL AS photoLocal,
        P.PHOTO_ORIGINAL AS photoOriginal,
        COUNT(G.GOOD_NUMBER) AS goodCount -- 추천수 조회
        FROM DR_RECIPE R
        JOIN DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
        LEFT JOIN DR_PHOTO P ON R.RECIPE_NUMBER = P.RECIPE_NUMBER
        LEFT JOIN DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
        WHERE R.RECIPE_TYPE = '챗봇레시피' -- 나만의 레시피 필터링
        GROUP BY R.RECIPE_NUMBER, R.RECIPE_TITLE, U.USER_NICKNAME, R.RECIPE_WRITE_DATE, P.PHOTO_LOCAL,P.PHOTO_ORIGINAL
        ORDER BY R.RECIPE_WRITE_DATE DESC-- 최신순 정렬
    </select>

    <!--    챗봇레시피 추천순-->
    <select id="selectAllPagesGood1" resultType="ChatBotRecipeListDTO">
        SELECT R.RECIPE_NUMBER                            AS recipeNumber,
               R.RECIPE_TITLE                             AS recipeTitle,
               U.USER_NICKNAME                            AS userNickName,
               TO_CHAR(R.RECIPE_WRITE_DATE, 'YYYY-MM-DD') AS recipeWriteDate,
               P.PHOTO_LOCAL                              AS photoLocal,
               P.PHOTO_ORIGINAL,
               COUNT(G.GOOD_NUMBER)                       AS goodCount
        FROM DR_RECIPE R
                 JOIN DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN DR_PHOTO P ON R.RECIPE_NUMBER = P.RECIPE_NUMBER
                 LEFT JOIN DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
        WHERE R.RECIPE_TYPE = '챗봇레시피'
        GROUP BY R.RECIPE_NUMBER, R.RECIPE_TITLE, U.USER_NICKNAME, R.RECIPE_WRITE_DATE, P.PHOTO_LOCAL,P.PHOTO_ORIGINAL
        ORDER BY goodCount DESC -- goodCount를 기준으로 정렬
    </select>

    <!--    챗봇레시피 상세페이지-->
    <select id="selectChatBotRecipeDetail" resultType="ChatBotRecipeDetailDTO">
        SELECT R.RECIPE_NUMBER,                                               -- 레시피 번호
               R.RECIPE_TITLE,
               R.RECIPE_TYPE,                                                 -- 레시피 제목
               R.RECIPE_TEXT,                                                 -- 레시피 내용
               TO_CHAR(R.RECIPE_WRITE_DATE, 'YYYY-MM-DD') AS recipeWriteDate, -- 작성일
               U.USER_NICKNAME,                                               -- 작성자
               P.PHOTO_LOCAL,                                                 -- 작성자 프로필 사진
               COUNT(G.GOOD_NUMBER)                       AS goodCount,       -- 좋아요 수
               R.USER_NUMBER,
               U.PROFILE_PIC
        FROM DR_RECIPE R
                 JOIN DR_USER U ON R.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN DR_GOOD G ON R.RECIPE_NUMBER = G.RECIPE_NUMBER
                 LEFT JOIN DR_PHOTO P ON U.USER_NUMBER = P.USER_NUMBER AND ROWNUM = 1 -- 작성자 프로필 사진 (첫 번째 사진만)
        WHERE R.RECIPE_NUMBER = #{recipeNumber}
          AND R.RECIPE_TYPE = '챗봇레시피'
        GROUP BY R.RECIPE_NUMBER,
                 R.RECIPE_TITLE,
                 R.RECIPE_TYPE,
                 R.RECIPE_TEXT,
                 R.RECIPE_WRITE_DATE,
                 U.USER_NICKNAME,
                 P.PHOTO_LOCAL,
                 R.USER_NUMBER,
                 U.PROFILE_PIC
    </select>

    <!--   챗봇 레시피 상세페이지 추천 수 증가-->
    <insert id="ChatBotincreaseGoodCount" parameterType="ChatBotRecipeCommentDTO">
        <selectKey keyProperty="goodNumber" resultType="Long" order="BEFORE">
            SELECT SEQ_GOOD_NUMBER.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO DR_GOOD(GOOD_NUMBER, RECIPE_NUMBER, USER_NUMBER)
        VALUES (#{goodNumber} , #{recipeNumber}, #{userNumber})
    </insert>

    <!--    챗봇 레시피 상세페이지 추천 수 감소-->
    <delete id="ChatBotdecreaseGoodCount" parameterType="ChatBotRecipeCommentDTO">
        DELETE
        FROM DR_GOOD
        WHERE RECIPE_NUMBER = #{recipeNumber}
          AND USER_NUMBER = #{userNumber}
    </delete>

    <!--    챗봇레시피상세페이지 댓글조회-->
    <select id="selectChatBotRecipeComment" parameterType="Long" resultType="ChatBotRecipeCommentDTO">
        SELECT RP.REPLY_NUMBER      AS replyNumber,
               U.USER_NICKNAME      AS userNickName,
               RP.REPLY_WRITE_DATE  AS replyWriteDate,
               RP.REPLY_MODIFY_DATE AS replyModifyDate,
               RP.REPLY_TEXT        AS replyText,
--                P.PHOTO_ORIGINAL    AS photoOriginal,
               P.PHOTO_LOCAL        AS photoLocal,
               U.PROFILE_PIC
        FROM DR_REPLY RP
                 JOIN
             DR_USER U ON RP.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN
             DR_PHOTO P ON U.USER_NUMBER = P.USER_NUMBER
                 JOIN
             DR_RECIPE R ON RP.RECIPE_NUMBER = R.RECIPE_NUMBER
        WHERE RP.RECIPE_NUMBER = #{recipeNumber}
        ORDER BY RP.REPLY_WRITE_DATE DESC
    </select>

    <!--    챗봇 레시피 댓글 작성-->
    <insert id="insertChatBotReply" parameterType="ChatBotRecipeCommentDTO">
        <selectKey keyProperty="replyNumber" resultType="Long" order="BEFORE">
            SELECT SEQ_REPLY_NUMBER.nextval FROM DUAL
        </selectKey>
        INSERT INTO DR_REPLY(REPLY_NUMBER, REPLY_TEXT, RECIPE_NUMBER, USER_NUMBER)
        VALUES (#{replyNumber}, #{replyText}, #{recipeNumber}, #{userNumber})
    </insert>

    <!--    챗봇 레시피 댓글 수정-->
    <update id="updateChatBotReply" parameterType="ChatBotRecipeCommentDTO">
        UPDATE DR_REPLY
        SET REPLY_TEXT        = #{replyText},
            REPLY_MODIFY_DATE = SYSDATE
        WHERE REPLY_NUMBER = #{replyNumber}
    </update>

    <!--    챗봇 레시피 댓글 삭제-->
    <delete id="deleteChatBotReply" parameterType="Long">
        DELETE
        FROM DR_REPLY
        WHERE REPLY_NUMBER = #{replyNumber}
    </delete>


    <!--    나만의레시피 글쓰기-->
    <!-- 레시피 데이터 삽입 -->
    <insert id="insertMyRecipe" parameterType="MyRecipeWriteDTO">
        <selectKey keyProperty="recipeNumber" resultType="Long" order="BEFORE">
            SELECT SEQ_RECIPE_NUMBER.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO DR_RECIPE (
        RECIPE_NUMBER, USER_NUMBER, RECIPE_TITLE, RECIPE_TEXT, RECIPE_TYPE, RECIPE_WRITE_DATE
        ) VALUES (
        #{recipeNumber}, #{userNumber}, #{recipeTitle}, #{recipeText}, #{recipeType}, SYSDATE
        )
    </insert>

    <!-- 사진 테이블 추가-->
    <insert id="insertMyPhoto" parameterType="RecipePhotoDTO">
        <selectKey keyProperty="photoNumber" resultType="Long" order="BEFORE">
            SELECT SEQ_PHOTO_NUMBER.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO DR_PHOTO (
        PHOTO_NUMBER, PHOTO_ORIGINAL, PHOTO_LOCAL, PHOTO_SIZE , RECIPE_NUMBER
        ) VALUES (
        #{photoNumber}, #{photoOriginal}, #{photoLocal}, #{photoSize} ,  #{recipeNumber}
        )
    </insert>

<!--    챗봇 레시피 데이터 삽입-->
    <insert id="insertChatBotRecipe" parameterType="ChatBotRecipeWriteDTO">
        <selectKey keyProperty="recipeNumber" resultType="Long" order="BEFORE">
            SELECT SEQ_RECIPE_NUMBER.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO DR_RECIPE (
        RECIPE_NUMBER, USER_NUMBER, RECIPE_TITLE, RECIPE_TEXT, RECIPE_TYPE, RECIPE_WRITE_DATE
        ) VALUES (
        #{recipeNumber}, #{userNumber}, #{recipeTitle}, #{recipeText}, #{recipeType}, SYSDATE
        )
    </insert>

<!--    챗봇 레시피 사진 삽입-->
    <insert id="insertChatBotPhoto" parameterType="RecipePhotoDTO">
        <selectKey keyProperty="photoNumber" resultType="Long" order="BEFORE">
            SELECT SEQ_PHOTO_NUMBER.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO DR_PHOTO (
        PHOTO_NUMBER, PHOTO_ORIGINAL, PHOTO_LOCAL, PHOTO_SIZE , RECIPE_NUMBER
        ) VALUES (
        #{photoNumber}, #{photoOriginal}, #{photoLocal}, #{photoSize} ,  #{recipeNumber}
        )
    </insert>

    <!-- 환경기여 점수 INSERT (글쓰기 시 10점 추가) -->
    <insert id="insertScoreByRecipe" parameterType="ScoreCheckDTO">
        INSERT INTO DR_SCORE (SCORE_NUMBER, USER_NUMBER, SCORE_GET)
        VALUES (SEQ_SCORE_NUMBER.NEXTVAL, #{userNumber}, #{scoreGet})
    </insert>

<!--    나만의 레시피 추천받았을 시 점수 5점추가-->
    <insert id="insertScorerecommand" parameterType="ScoreCheckDTO">
        INSERT INTO DR_SCORE (SCORE_NUMBER, USER_NUMBER, SCORE_GET)
        VALUES (SEQ_SCORE_NUMBER.NEXTVAL, #{userNumber}, #{scoreGet})
    </insert>

<!--     나만의 레시피 추천해제 시 점수 5점 제거 (삭제)-->
    <delete id="deleteScorerecommand" parameterType="ScoreCheckDTO">
        DELETE FROM DR_SCORE
        WHERE SCORE_NUMBER = (
            SELECT MAX(SCORE_NUMBER)
            FROM DR_SCORE
            WHERE USER_NUMBER = #{userNumber} AND SCORE_GET = 5
        )
          AND USER_NUMBER = #{userNumber}
          AND SCORE_GET = 5
    </delete>

    <!-- 찜 추가 -->
    <insert id="addSteam" parameterType="RecipeSteamDTO">
        <selectKey keyProperty="steamNumber" resultType="Long" order="BEFORE">
            SELECT SEQ_STEAM_NUMBER.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO DR_STEAM (STEAM_NUMBER, RECIPE_NUMBER, USER_NUMBER)
        VALUES (#{steamNumber}, #{recipeNumber}, #{userNumber})
    </insert>

    <!-- 찜 삭제 -->
    <delete id="removeSteam" parameterType="RecipeSteamDTO">
        DELETE
        FROM DR_STEAM
        WHERE RECIPE_NUMBER = #{recipeNumber}
          AND USER_NUMBER = #{userNumber}
    </delete>

<!--    신고페이지-->
    <insert id="report" parameterType="RecipeReportDTO">
        <selectKey keyProperty="sirenNumber" resultType="Long" order="BEFORE">
            SELECT SEQ_SIREN_NUMBER.nextval FROM DUAL
        </selectKey>
        INSERT INTO DR_SIREN(SIREN_NUMBER, SIREN_REASON, SIREN_TYPE , RECIPE_NUMBER , REPLY_NUMBER , USER_NUMBER)
        VALUES (#{sirenNumber}, #{sirenReason}, #{sirenType} , #{recipeNumber} , #{replyNumber} , #{userNumber})
    </insert>


    <!-- 나만의 레시피 삭제 레시피 -->
    <delete id="deleteRecipe" parameterType="Long">
        DELETE FROM DR_RECIPE WHERE RECIPE_NUMBER = #{recipeNumber}
    </delete>

    <delete id="deletePhoto" parameterType="Long">
        DELETE FROM DR_PHOTO WHERE RECIPE_NUMBER = #{recipeNumber}
    </delete>

<!--    챗봇 레시피 삭제-->
    <delete id="deleteChatBotRecipe" parameterType="Long">
        DELETE FROM DR_RECIPE WHERE RECIPE_NUMBER = #{recipeNumber}
    </delete>

    <delete id="deleteChatBotPhoto" parameterType="Long">
        DELETE FROM DR_PHOTO WHERE RECIPE_NUMBER = #{recipeNumber}
    </delete>

    <!-- 나만의 레시피 업데이트 -->
    <update id="updateRecipe" parameterType="MyRecipeUpdateDTO">
        UPDATE DR_RECIPE
        SET RECIPE_TITLE = #{recipeTitle}, RECIPE_TEXT = #{recipeText}
        WHERE RECIPE_NUMBER = #{recipeNumber}
    </update>

    <update id="updatePhoto" parameterType="MyRecipeUpdateDTO">
        UPDATE DR_PHOTO
        SET PHOTO_ORIGINAL = #{photoOriginal}, PHOTO_LOCAL = #{photoLocal}, PHOTO_SIZE = #{photoSize}
        WHERE RECIPE_NUMBER = #{recipeNumber}
    </update>

<!--    챗봇 레시피 업데이트-->
    <update id="updateChatBotRecipe" parameterType="ChatBotRecipeUpdateDTO">
        UPDATE DR_RECIPE
        SET RECIPE_TITLE = #{recipeTitle}, RECIPE_TEXT = #{recipeText}
        WHERE RECIPE_NUMBER = #{recipeNumber}
    </update>

    <update id="updateChatBotPhoto" parameterType="ChatBotRecipeUpdateDTO">
        UPDATE DR_PHOTO
        SET PHOTO_ORIGINAL = #{photoOriginal}, PHOTO_LOCAL = #{photoLocal}, PHOTO_SIZE = #{photoSize}
        WHERE RECIPE_NUMBER = #{recipeNumber}
    </update>

</mapper>
